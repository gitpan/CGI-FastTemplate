Revision history for Perl extension CGI::FastTemplate.

1.07  Sun Jan 24 23:14:03 EST 1999

	- edited main regexp to add support for new ${VAR} style variables.
	Thanks to: Eric L. Brine <q2ir@unb.ca>
	- minor pod doco edits


1.06  Mon Jan  4 13:47:13 EST 1999

	- extended clear_tpl() to allow for a selective clearing of loaded templates.
	Useful for persistant or long running code where you want to use a large
	template, but don't want to keep it in memory.

	clear_tpl()         - clears all loaded templates from cache
	clear_tpl(SCALAR)   - clears only template SCALAR
	clear_tpl(ARRAY)    - clears templates named in ARRAY


1.05  Fri Nov 27 15:27:54 EST 1998
	- extended clear_parse() (alias: clear()) to handle array as well as
	a scalar.   e.g. $tpl->clear("ROWS") or $tpl->clear("ROWS", "COLS", "HEAD"); 
	are valid.


1.04  Thu Oct 29 09:57:15 EST 1998
	- strict() now leaves unknown variables in the final doc instead of
	converting them to an empty string.  see: no_strict() to get the old 
	behavior back.


1.03  Thu Oct 15 10:42:14 EDT 1998
	- minor change to prevent spurious warnings under -w (e.g. {strict} 
	becomes {"strict"})


1.02  Tue Sep 22 08:57:29 EDT 1998

	- fixed bug that allowed first character after '$' to be a digit.
	Variables are now: $[A-Z][A-Z0-9_]+
	Thanks to: Benjamin Low <b.d.low@unsw.edu.au>
	
	- add strict() no_strict() which turns on/off complaints to STDERR
	when a variable is found but no value found for it.


1.01  Tue Sep 15 10:01:44 EDT 1998

	- added clear(SCALAR) which clears the scalar from the parsed
	hash. i.e. 
		$tpl->clear("FOO");	## equivalent to:
		$tpl->assign(FOO=>"");
	
	- made $v='' not undef in parse() to avoid spurious warnings
	Thanks to: Benjamin Low <b.d.low@unsw.edu.au>

	- added method define_nofile() (alias: define_raw) which allows
	you to define a template without having to create a separate file
	for your template.


1.00  Thu Aug 20 11:59:22 1998
	- original version; created by h2xs 1.18
	- first public release (rewrite)


